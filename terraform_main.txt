terraform {
  required_providers {
    google = {
      source  = "hashicorp/google"
      version = "3.5.0"
    }
  }
}

provider "google" {
  # Replace these with your project details
  project = "YOUR_PROJECT_ID"
  region  = "us-central1"
  zone    = "us-central1-a"
}

# Create a VPC network
resource "google_compute_network" "vpc_network" {
  name = "terraform-network"
}

# Create a static IP address
resource "google_compute_address" "vm_static_ip" {
  name = "terraform-static-ip"
}

# Create a VM instance
resource "google_compute_instance" "vm_instance" {
  name         = "terraform-instance"
  machine_type = "e2-micro"
  tags         = ["web", "dev"]

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"
    }
  }

  network_interface {
    network = google_compute_network.vpc_network.self_link
    access_config {
      nat_ip = google_compute_address.vm_static_ip.address
    }
  }

  # Provisioner example - runs on local machine when resource is created
  provisioner "local-exec" {
    command = "echo ${google_compute_instance.vm_instance.name}: ${google_compute_instance.vm_instance.network_interface[0].access_config[0].nat_ip} >> ip_address.txt"
  }
}

# Optional: Create a storage bucket
# Uncomment to include this resource
/*
resource "google_storage_bucket" "example_bucket" {
  name     = "your-unique-bucket-name" # Must be globally unique
  location = "US"

  website {
    main_page_suffix = "index.html"
    not_found_page   = "404.html"
  }
}

# Create a second VM instance with explicit dependency on the bucket
resource "google_compute_instance" "another_instance" {
  # Explicit dependency example
  depends_on = [google_storage_bucket.example_bucket]

  name         = "terraform-instance-2"
  machine_type = "e2-micro"

  boot_disk {
    initialize_params {
      image = "cos-cloud/cos-stable"
    }
  }

  network_interface {
    network = google_compute_network.vpc_network.self_link
    access_config {
    }
  }
}
*/